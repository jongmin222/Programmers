using System;
using System.Linq;

public class Solution {
    public long solution(int n, int[] works) {
        long answer = 0;
        int count = 0;
        bool isEnd = false;
        
        Array.Sort(works);
        Array.Reverse(works);
        
        while(count < n)
        {            
            for(int i = 0 ; i < works.Length ; i++)
            {                
                int gap = 0;                
                if(i == works.Length-1)
                    gap = Math.Max((n-count)/works.Length,1);
                else
                {
                    if(works[i] - works[i+1] == 0)
                        continue;
                    else
                        gap = Math.Min(works[i]-works[i+1], (n-count)/(i+1));
                }
                
                for(int j = 0 ; j <= i ; j++)
                {
                    works[j] -= gap;
                    count += gap;
                    
                    if(count >= n)
                    {
                        isEnd = true;
                        break;
                    }
                }
                
                if(isEnd)
                    break;
            }            
        }
        
        for(int i = 0 ; i < works.Length ; i++)
        {
            answer += (long)Math.Pow(Math.Max(works[i], 0),2);
        }
        return answer;
    }
}