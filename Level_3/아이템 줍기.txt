using System;
using System.Collections.Generic;

public class Solution {
    public int solution(int[,] rectangle, int characterX, int characterY, int itemX, int itemY) {
        int answer = 10000;
        int[,] matrix = new int[102,102];
        Queue <(int,int,int)> queue = new Queue <(int,int,int)>();
        
        for(int i = 0 ; i < rectangle.GetLength(0); i++)
        {
            for(int j = rectangle[i,0]*2 ; j <= rectangle[i,2]*2 ; j++)
            {
                for(int k = rectangle[i,1]*2 ; k <= rectangle[i,3]*2 ; k++)
                {
                    if(matrix[j,k] == 9)
                        continue;
                    
                    if(j == rectangle[i,0]*2 || j == rectangle[i,2]*2 ||
                       k == rectangle[i,1]*2 || k == rectangle[i,3]*2)
                    {
                        if(matrix[j,k] == 1)
                            matrix[j,k] = 2;
                        else if(matrix[j,k] == 0)
                            matrix[j,k] = 1;
                    }
                    else
                        matrix[j,k] = 9;
                }
            }
        }
        
        queue.Enqueue((characterX*2,characterY*2,0));
        while(queue.Count > 0)
        {
            (int posX, int posY, int count) = queue.Dequeue();
            int[] directionX = new int[4]{0,1,0,-1};
            int[] directionY = new int[4]{1,0,-1,0};
            bool isFind = false;
            
            if(posX == itemX*2 && posY == itemY*2 && answer > count/2)
            {
                answer = count/2;
                continue;
            }
            
            if(matrix[posX,posY] == 1)
            {
                for(int i = 0 ; i < 4 ; i++)
                {
                    if(matrix[posX+directionX[i],posY+directionY[i]] == 2)
                    {
                        queue.Enqueue((posX+directionX[i], posY+directionY[i], count+1));
                        matrix[posX,posY] = 8;
                        isFind = true;
                    }
                }
                
                if(!isFind)
                {
                    for(int i = 0 ; i < 4 ; i++)
                    {
                        if(matrix[posX+directionX[i],posY+directionY[i]] == 1)
                        {
                            queue.Enqueue((posX+directionX[i], posY+directionY[i], count+1));
                            matrix[posX,posY] = 8;
                        }
                    }
                }
            }            
            else if(matrix[posX,posY] == 2)
            {
                for(int i = 0 ; i < 4 ; i++)
                {
                    if(matrix[posX+directionX[i],posY+directionY[i]] == 1)
                    {
                        queue.Enqueue((posX+directionX[i], posY+directionY[i], count+1));
                        matrix[posX,posY] = 8;
                        isFind = true;
                    }
                }            
            }
        }
        
        return answer;
    }
}