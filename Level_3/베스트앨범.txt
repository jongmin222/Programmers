using System;
using System.Collections.Generic;
using System.Linq;

public class Solution {
    public int[] solution(string[] genres, int[] plays) {
        List<int> answer = new List<int>();
        List<(string genre, int play)> list = new List<(string genre, int play)>();        
        
        for(int i = 0 ; i < genres.Length; i++)
        {
            int index = list.FindIndex(x=>x.genre.Equals(genres[i]));
            if(index == -1)
                list.Add((genres[i],plays[i]));
            else
                list[index] = (list[index].genre,list[index].play+plays[i]);
        }
        list = list.OrderByDescending(x=>x.play).ToList();
        int[,] play = new int[list.Count,2];
        int[,] number = new int[list.Count,2];
        
        for(int j = 0 ; j < list.Count ; j++)
        {
            for(int i = 0 ; i < genres.Length ; i++)
            {
                if(genres[i] == list[j].genre)
                {
                    if(play[j,0] == 0)
                    {
                        play[j,0] = plays[i];
                        number[j,0] = i;
                    }
                    else                        
                    {
                        if(play[j,0] < plays[i])
                        {
                            play[j,1] = play[j,0];
                            number[j,1] = number[j,0];
                            
                            play[j,0] = plays[i];
                            number[j,0] = i;
                        }
                        else if(play[j,1] < plays[i])
                        {
                            play[j,1] = plays[i];
                            number[j,1] = i;
                        }
                    }
                }
            }
        }
        
        for(int i = 0 ; i < number.GetLength(0) ; i++)
            for(int j = 0 ; j < number.GetLength(1) ; j++)
                if(play[i,j] > 0)
                    answer.Add(number[i,j]);
        
        return answer.ToArray();
    }
}