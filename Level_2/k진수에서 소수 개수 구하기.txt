using System;
using System.Text;

public class Solution {
    public bool IsPrime(long num)
    {
        if(num == 1)
            return false;
        
        for(long i = 2 ; i <= Math.Sqrt(num) ; i++)
        {
            if(num % i == 0)
                return false;          
        }
        
        return true;
    }
    
    public void Ternary(int number , int scale, ref int answer)
    {
        int count = 2;
        for(int i = 0 ; i < number/scale ; i++)
        {            
            if(Math.Pow(scale,i) > number)
            {
                count = i;
                break;
            }
        }
        
        StringBuilder sb = new StringBuilder();
        int sum = 0;
        for(int i = count-1 ; i >= 0 ; i--)
        {
            for(int j = 1 ; j <= scale+1 ; j++)
            {                
                if(Math.Pow(scale,i) * j > number)
                {
                    sb.Append(Convert.ToString((j-1)));
                    number -= (int)Math.Pow(scale,i) * (j-1);
                    break;
                }
            }
        }
        
        string[] numbers = sb.ToString().Split('0');
        for(int i = 0 ; i < numbers.Length ; i++)
        {
            if(numbers[i]== "")
                continue;
            Console.WriteLine(numbers[i]);
            if(IsPrime(Convert.ToInt64(numbers[i])))
                answer++;
        }
    }
    
    public int solution(int n, int k) {
        int answer = 0;
        Ternary(n,k, ref answer);
        
        return answer;
    }
}