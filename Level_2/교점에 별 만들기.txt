using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
public class Solution {
    public void SearchPoint(List<(long x, long y)> list, int[,] line){
        try
        {
            for(int j = 0 ; j < line.GetLength(0)-1 ; j++)
            {
                for(int i = j+1 ; i < line.GetLength(0) ; i++)
                {
                    double x = ((double)line[j,1]*(double)line[i,2]-(double)line[j,2]*(double)line[i,1])/
                        ((double)line[j,0]*(double)line[i,1]-(double)line[j,1]*(double)line[i,0]);
                    double y = (double)(line[j,2]*(double)line[i,0]-(double)line[j,0]*(double)line[i,2])/
                        ((double)line[j,0]*(double)line[i,1]-(double)line[j,1]*(double)line[i,0]);
                    
                    if(x % 1 == 0 && y % 1 == 0)
                        list.Add(((long)x,(long)y));
                }
            }
        }
        catch(DivideByZeroException)
        {
        }
        return;
    }
    
    public string[] solution(int[,] line) {
        string[] answer = new string[]{};
        List <(long x, long y)> list = new List<(long x, long y)>();
        SearchPoint(list, line);
        list = list.Distinct().OrderBy(x => x.y).ThenBy(x => x.x).ToList();        
        
        if(list.Count == 1)
        {
            answer = new string[1]{"*"};
            return answer;            
        }
        else            
        {
            (long x, long y) max = list[0];
            (long x, long y) min = list[0];
            foreach((long x, long y) point in list)
            {
                if (max.x < point.x)    max.x = point.x;
                if (max.y < point.y)    max.y = point.y;                    
                if (min.x > point.x)    min.x = point.x;
                if (min.y > point.y)    min.y = point.y;                    
            }
            long width = max.x-min.x;
            long height = max.y-min.y;
            int index = 0;
            answer = new string[height+1];
            for(int j = 0 ; j < height+1 ; j++)
            {
                StringBuilder sb = new StringBuilder();
                for(int i = 0 ; i < width+1; i++)
                {
                    if(list.Count > index && list[index].x-min.x == i && list[index].y-min.y == j)
                    {
                        sb.Append('*');
                        index++;
                    }
                    else
                        sb.Append('.');
                }
                answer[answer.Length-j-1] = sb.ToString();
            }
        }
        
        return answer;
    }
}